name: Test

on:
  push:
    branches: main
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build crawler image even if no code changes'
        default: 'false'
        type: boolean
      force_web_build:
        description: 'Force build web image even if no code changes'
        default: 'false'
        type: boolean
      force_backend_build:
        description: 'Force build backend image even if no code changes'
        default: 'false'
        type: boolean

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #
  #     - name: Setup Python
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: 3.9
  #
  #     - name: Install dependencies with pipenv
  #       run: |
      #     pip install pipenv
      #     pipenv install --deploy --dev
      #
      # - run: pipenv run isort --recursive --diff .
      # - run: pipenv run black --check .
      # - run: pipenv run flake8
      # - run: pipenv run mypy
      # - run: pipenv run pytest --cov --cov-fail-under=100

  changes:
    runs-on: ubuntu-latest
    outputs:
      crawler: ${{ steps.changes.outputs.crawler }}
      web: ${{ steps.changes.outputs.web }}
      backend: ${{ steps.changes.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
        with:
          base: HEAD
          filters: |
            crawler:
              - 'crawler/**'
            web:
              - 'web/**'
            backend:
              - 'backend/**'

  docker-crawler-image:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ github.event.inputs.force_build == 'true' || needs.changes.outputs.crawler == 'true' }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.allocsoc.net
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build, tag, and push crawler image to Harbor
        uses: docker/build-push-action@v5
        with:
          context: ./crawler
          push: true
          tags: harbor.allocsoc.net/awesome-crawler/awesome-crawler:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  docker-web-image:
    runs-on: ubuntu-latest
    needs: changes
    if: {{ github.event.inputs.force_web_build == 'true' || needs.changes.outputs.web == 'true' }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.allocsoc.net
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build, tag, and push web image to Harbor
        uses: docker/build-push-action@v5
        with:
          context: ./web
          push: true
          tags: harbor.allocsoc.net/awesome-crawler/awesome-web:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  docker-backend-image:
    runs-on: ubuntu-latest
    needs: changes
    if: {{ github.event.inputs.force_backend_build == 'true' || needs.changes.outputs.backend == 'true' }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.allocsoc.net
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build, tag, and push backend image to Harbor
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: harbor.allocsoc.net/awesome-crawler/awesome-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-manifests:
    needs: docker-crawler-image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && needs.docker-crawler-image.result == 'success'
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update image in deployment
        run: |
          NEW_IMAGE=harbor.allocsoc.net/awesome-crawler/awesome-crawler:${{ github.sha }}
          sed -i "s|image: .*|image: ${NEW_IMAGE}|" k8s/awesome-crawler-cronjob.yaml

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add k8s/awesome-crawler-cronjob.yaml
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update awesome-crawler image to ${{ github.sha }}"
            git pcsh
          fi

  update-web-manifests:
    needs: docker-web-image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && needs.docker-web-image.result == 'success'
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update web image in deployment
        run: |
          NEW_IMAGE=harbor.allocsoc.net/awesome-crawler/awesome-web:${{ github.sha }}
          sed -i "s|image: harbor.allocsoc.net/awesome-crawler/awesome-web:.*|image: ${NEW_IMAGE}|" k8s/awesome-web.yaml

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add k8s/awesome-web.yaml
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update awesome-web image to ${{ github.sha }}"
            git push
          fi

  update-backend-manifests:
    needs: docker-backend-image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && needs.docker-backend-image.result == 'success'
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update backend image in deployment
        run: |
          NEW_IMAGE=harbor.allocsoc.net/awesome-crawler/awesome-backend:${{ github.sha }}
          sed -i "s|image: harbor.allocsoc.net/awesome-crawler/awesome-backend:.*|image: ${NEW_IMAGE}|" k8s/awesome-backend.yaml

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add k8s/awesome-backend.yaml
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update awesome-backend image to ${{ github.sha }}"
            git push
          fi
